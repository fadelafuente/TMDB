# Generated by Django 4.2.5 on 2023-11-09 23:40

from django.db import migrations, models


class Migration(migrations.Migration):

    replaces = [('user_api', '0001_initial'), ('user_api', '0002_alter_appuser_is_active'), ('user_api', '0003_appuser_first_name_appuser_last_name'), ('user_api', '0004_alter_appuser_first_name_alter_appuser_last_name'), ('user_api', '0005_alter_appuser_first_name_alter_appuser_last_name_and_more'), ('user_api', '0006_alter_appuser_username'), ('user_api', '0007_alter_appuser_username'), ('user_api', '0008_alter_appuser_username'), ('user_api', '0009_alter_appuser_username'), ('user_api', '0010_alter_appuser_first_name_alter_appuser_last_name_and_more'), ('user_api', '0011_remove_appuser_username_alter_appuser_first_name_and_more'), ('user_api', '0012_appuser_username'), ('user_api', '0013_alter_appuser_username')]

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='AppUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('email', models.EmailField(max_length=255, unique=True)),
                ('is_active', models.BooleanField(default=True)),
                ('is_staff', models.BooleanField(default=False)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
                ('first_name', models.CharField(max_length=255)),
                ('last_name', models.CharField(max_length=255)),
                ('username', models.CharField(max_length=50)),
            ],
            options={
                'abstract': False,
            },
        ),
    ]
